<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sermon Clipper</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&amp;display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="container">
        <header>
            <h1>Sermon Clipper</h1>
            <p>Download YouTube Clips in various qualities</p>
        </header>
        <main>
            <div id="download-ui" class="download-form">
                <div class="form-group">
                    <label for="url">YouTube Clip URL</label>
                    <input type="text" id="url" name="url" placeholder="Paste your YouTube clip link here" required>
                </div>
                <div class="quality-buttons">
                    <button class="quality-btn" data-quality="360">Download 360p</button>
                    <button class="quality-btn" data-quality="720">Download 720p</button>
                    <button class="quality-btn" data-quality="1080">Download 1080p</button>
                </div>
            </div>
        </main>
        <footer>
            <p>&copy; Christ's Heart Ministries International.</p>
            <p>
              <small>Created by <a href="https://grealm.org">G-Realm Studio</a></small>
            </p>
        </footer>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const socket = io();

            const downloadButtons = document.querySelectorAll('.quality-btn');
            const urlInput = document.getElementById('url');

            downloadButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const videoUrl = urlInput.value;
                    const quality = button.dataset.quality;

                    if (!videoUrl) {
                         Swal.fire({ icon: 'error', title: 'URL is Missing', text: 'Please paste a URL in the box.' });
                         return;
                    }

                    socket.emit('download-video', { videoUrl, quality });

                    Swal.fire({
                        title: `Downloading your ${quality}p video`,
                        html: `
                            <div class="swal2-loading"></div>
                            <p>Please wait, this may take a moment.</p>
                        `,
                        allowOutsideClick: false,
                        showCancelButton: true,
                        cancelButtonText: 'Cancel',
                        showConfirmButton: false, // Hide default OK button
                    }).then((result) => {
                        if (result.dismiss === Swal.DismissReason.cancel) {
                            socket.emit('cancel-download');
                            Swal.fire('Cancelled', 'Your download has been cancelled.', 'info');
                        }
                    });
                });
            });

            socket.on('complete', ({ filename, title }) => {
                const downloadUrl = `/download-file/${filename}?title=${encodeURIComponent(title)}`;
                Swal.fire({
                    icon: 'success',
                    title: 'Download Ready!',
                    html: `Your video "<b>${title}</b>" is ready.`, 
                    confirmButtonText: 'Download Now',
                    showCancelButton: true,
                    cancelButtonText: 'Close'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = downloadUrl;
                    }
                });
            });

            socket.on('download-error', ({ message }) => {
                Swal.fire({ icon: 'error', title: 'Download Failed', text: message });
            });
        });
    </script>
</body>
</html>